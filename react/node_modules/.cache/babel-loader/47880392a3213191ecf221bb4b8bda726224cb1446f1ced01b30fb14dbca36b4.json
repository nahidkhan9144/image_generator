{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\image_generator\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport './style.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [description, setDescription] = useState(\"\");\n  const [submitStatus, setSubmitStatus] = useState(\"Submit\");\n  const [dreamAnalysis, setDreamAnalysis] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const responseGenerate = async inputText => {\n    const prompt = {\n      inputText: inputText\n    };\n    const result = await fetch(\"/api/ai\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(prompt)\n    });\n    if (result.ok) {\n      const airespond = await result.json(); // Parse the JSON response body\n      setDreamAnalysis(airespond.analysis);\n      setImageUrl(airespond.imageURL);\n      setSubmitStatus(\"Submit\");\n    } else {\n      setSubmitStatus(\"Retry\");\n    }\n  };\n  async function submitDescription() {\n    setSubmitStatus(\"Waiting\");\n    responseGenerate(description);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Dreamweaver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        placeholder: \"Tell me your dream\",\n        onChange: e => setDescription(e.target.value),\n        className: \"dream-description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitDescription,\n        className: \"submit-button\",\n        children: submitStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dream-analysis\",\n        children: dreamAnalysis\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: \"Loaded\",\n        style: {\n          maxWidth: '300px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MBQ99xtnd+tVNPvrgCBE/P5q0B0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","description","setDescription","submitStatus","setSubmitStatus","dreamAnalysis","setDreamAnalysis","imageUrl","setImageUrl","responseGenerate","inputText","prompt","result","fetch","method","headers","body","JSON","stringify","ok","airespond","json","analysis","imageURL","submitDescription","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","placeholder","onChange","e","target","onClick","src","alt","style","maxWidth","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/image_generator/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport './style.css';\nimport { useState } from 'react';\n\nfunction App() {\n  const [description, setDescription] = useState(\"\");\n  const [submitStatus, setSubmitStatus] = useState(\"Submit\");\n  const [dreamAnalysis, setDreamAnalysis] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\")\n\n  const responseGenerate = async (inputText) => {\n    const prompt = {\n      inputText: inputText\n    }\n\n    const result = await fetch(\"/api/ai\", {\n      method: \"POST\",\n      headers: {\n          \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(prompt)\n    })\n\n    if (result.ok) {\n      const airespond = await result.json(); // Parse the JSON response body\n      setDreamAnalysis(airespond.analysis);\n      setImageUrl(airespond.imageURL);\n      setSubmitStatus(\"Submit\");\n    } else {\n      setSubmitStatus(\"Retry\");\n    }\n  };\n\n  \n\n  async function submitDescription() {\n    setSubmitStatus(\"Waiting\");\n    responseGenerate(description);\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>\n          Dreamweaver\n        </h2>\n      </header>\n      <div className='App-container'>\n        <textarea \n            value={description}\n            placeholder=\"Tell me your dream\" \n            onChange={e => setDescription(e.target.value)}\n            className=\"dream-description\"\n        ></textarea>\n        <button onClick={submitDescription} className='submit-button'>{submitStatus}</button>\n        <span className=\"dream-analysis\">\n          {dreamAnalysis}\n        </span>\n        {imageUrl && <img src={imageUrl} alt=\"Loaded\"  style={{ maxWidth: '300px'}}/>}\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}